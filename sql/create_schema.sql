--- Generated by ChatGPT

----------------------
-- Products
----------------------
-- Create Product table
CREATE TABLE Products (
    id NUMBER(10) PRIMARY KEY,
    name VARCHAR2(100) NOT NULL,
    description VARCHAR2(4000),
    price NUMBER(10,2) NOT NULL,
    quantity NUMBER(10) NOT NULL,
    created_at TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    updated_at TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL
);

-- Insert sample data into Product table
DECLARE
  i NUMBER := 1;
BEGIN
  FOR i IN 1..30 LOOP
    INSERT INTO Products (id, name, description, price, quantity, created_at, updated_at)
    VALUES (i, 'Product ' || i, 'This is product ' || i, 1000.00 + (i * 100), 50 - i, SYSTIMESTAMP - i, SYSTIMESTAMP);
  END LOOP;
END;
/

----------------------
-- Customers
----------------------
-- Create Customer table
CREATE TABLE Customers (
    id NUMBER(10) PRIMARY KEY,
    first_name VARCHAR2(50) NOT NULL,
    last_name VARCHAR2(50) NOT NULL,
    email VARCHAR2(100) NOT NULL,
    phone_number VARCHAR2(20),
    created_at TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    updated_at TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL
);

-- Insert sample data into Customer table
DECLARE
  i NUMBER := 1;
BEGIN
  FOR i IN 1..30 LOOP
    INSERT INTO Customers (id, first_name, last_name, email, phone_number, created_at, updated_at)
    VALUES (i, 'First ' || i, 'Last ' || i, 'email' || i || '@example.com', '123-456-789' || i, SYSTIMESTAMP - i, SYSTIMESTAMP - i);
  END LOOP;
END;
/

----------------------
-- Orders
----------------------
-- Create Order table
CREATE TABLE Orders (
    id NUMBER(10) PRIMARY KEY,
    customer_id NUMBER(10) NOT NULL,
    total_price NUMBER(10,2) NOT NULL,
    order_date TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    status VARCHAR2(20) NOT NULL,
    CONSTRAINT fk_customer
        FOREIGN KEY (customer_id)
        REFERENCES Customers(id)
);

-- Insert sample data into Order table
DECLARE
  i NUMBER := 1;
BEGIN
  FOR i IN 1..30 LOOP
    INSERT INTO Orders (id, customer_id, total_price, order_date, status)
    VALUES (i, MOD(i, 3) + 1, 1000.00 + (i * 100), SYSTIMESTAMP - i, CASE WHEN MOD(i, 3) = 0 THEN 'PROCESSING' WHEN MOD(i, 3) = 1 THEN 'SHIPPED' ELSE 'DELIVERED' END);
  END LOOP;
END;
/

----------------------
-- Payments
----------------------
-- Create Payment table
CREATE TABLE Payments (
    id NUMBER(10) PRIMARY KEY,
    order_id NUMBER(10) NOT NULL,
    payment_method VARCHAR2(20) NOT NULL,
    amount NUMBER(10,2) NOT NULL,
    payment_date TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    CONSTRAINT fk_order
        FOREIGN KEY (order_id)
        REFERENCES Orders(id)
);

-- Insert sample data into Payment table
DECLARE
  i NUMBER := 1;
BEGIN
  FOR i IN 1..30 LOOP
    INSERT INTO Payments (id, order_id, payment_method, amount, payment_date)
    VALUES (i, i, CASE WHEN MOD(i, 2) = 0 THEN 'CREDIT_CARD' ELSE 'PAYPAL' END, 1000.00 + (i * 100), SYSTIMESTAMP - i);
  END LOOP;
END;
/

----------------------
-- Carts
----------------------
-- Create Cart table
CREATE TABLE Carts (
    id NUMBER(10) PRIMARY KEY,
    customer_id NUMBER(10) NOT NULL,
    created_at TIMESTAMP DEFAULT SYSTIMESTAMP NOT NULL,
    CONSTRAINT fk_customer_cart
        FOREIGN KEY (customer_id)
        REFERENCES Customers(id)
);

-- Insert sample data into Cart table
DECLARE
  i NUMBER := 1;
BEGIN
  FOR i IN 1..30 LOOP
    INSERT INTO Carts (id, customer_id, created_at)
    VALUES (i, MOD(i, 3) + 1, SYSTIMESTAMP - i);
  END LOOP;
END;
/
